<Project Sdk="Microsoft.NET.Sdk.Web">

   <PropertyGroup>
      <TargetFramework>netcoreapp3.1</TargetFramework>
      <LangVersion>latest</LangVersion>
      <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
      <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
      <IsPackable>false</IsPackable>
      <SpaRoot>ClientApp\</SpaRoot>
      <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

      <!-- Set this to true if you enable server-side prerendering -->
      <BuildServerSideRenderer>false</BuildServerSideRenderer>

      <!-- These settings related to GitVersionTask -->
      <WriteVersionInfoToBuildLog>true</WriteVersionInfoToBuildLog>
      <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
      <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
      <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>
      <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>
      <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>
      <UserSecretsId>2c603b24-5e3c-4e7c-afca-070947f91e24</UserSecretsId>
   </PropertyGroup>

   <ItemGroup>
      <PackageReference Include="CsvHelper" Version="12.2.2" />
      <PackageReference Include="GitVersionTask" Version="5.5.1">
         <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
         <PrivateAssets>all</PrivateAssets>
      </PackageReference>
      <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="7.0.0" />
      <PackageReference Include="IdentityServer4.AccessTokenValidation" Version="3.0.1" />
      <PackageReference Include="IdentityServer4.AspNetIdentity" Version="3.1.3" />
      <PackageReference Include="IdentityServer4.EntityFramework" Version="3.1.3" />
      <PackageReference Include="IdentityServer4" Version="3.1.3" />
      <PackageReference Include="LinqKit" Version="1.1.17" />
      <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.14.0" />
      <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.5" />
      <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.5" />
      <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.5" />
      <PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="3.1.5" />
      <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.5" />
      <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.3" />
      <PackageReference Include="nswag.aspnetcore" Version="13.6.1" />
   </ItemGroup>

   <ItemGroup>
      <!-- Don't publish the SPA source files, but do show them in the project files list -->
      <Content Remove="$(SpaRoot)**" />
      <None Remove="$(SpaRoot)**" />
      <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
   </ItemGroup>

   <ItemGroup>
      <Compile Remove="Migrations\20190908194117_Adds_EventRegistrations.cs" />
      <Compile Remove="Migrations\20190908194117_Adds_EventRegistrations.Designer.cs" />
      <Compile Remove="Migrations\20190921181826_AddsEventRegistrationsAndEventSlots.cs" />
      <Compile Remove="Migrations\20190921181826_AddsEventRegistrationsAndEventSlots.Designer.cs" />
      <Compile Remove="Migrations\20190921190104_AddsEventRegistrationsAndEventSlots.cs" />
      <Compile Remove="Migrations\20190921190104_AddsEventRegistrationsAndEventSlots.Designer.cs" />
      <Compile Remove="Migrations\20191016202947_create-eventregistrations-and-eventslots.cs" />
      <Compile Remove="Migrations\20191016202947_create-eventregistrations-and-eventslots.Designer.cs" />
      <Compile Remove="Migrations\20191016203050_create-eventregistrations-and-eventslots.cs" />
      <Compile Remove="Migrations\20191016203050_create-eventregistrations-and-eventslots.Designer.cs" />
      <Compile Remove="Migrations\20191128185717_DaycareLocationOnRegistration.cs" />
      <Compile Remove="Migrations\20191128185717_DaycareLocationOnRegistration.Designer.cs" />
      <Compile Remove="Migrations\20200130203016_ImproveRegistrationsForDayAndNightCare.cs" />
      <Compile Remove="Migrations\20200130203016_ImproveRegistrationsForDayAndNightCare.Designer.cs" />
      <Compile Remove="Models\PaginationModel.cs" />
   </ItemGroup>

   <ItemGroup>
      <None Remove="Migrations\Sql\CleanAdmin.sql" />
   </ItemGroup>

   <ItemGroup>
      <Content Include="Migrations\Sql\CleanAdmin.sql">
         <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
   </ItemGroup>

   <ItemGroup>
      <Compile Update="Resources\DisplayNames.Designer.cs">
         <DesignTime>True</DesignTime>
         <AutoGen>True</AutoGen>
         <DependentUpon>DisplayNames.resx</DependentUpon>
      </Compile>
      <Compile Update="Resources\ErrorMessages.Designer.cs">
         <DesignTime>True</DesignTime>
         <AutoGen>True</AutoGen>
         <DependentUpon>ErrorMessages.resx</DependentUpon>
      </Compile>
   </ItemGroup>

   <ItemGroup>
      <EmbeddedResource Update="Resources\DisplayNames.resx">
         <Generator>PublicResXFileCodeGenerator</Generator>
         <LastGenOutput>DisplayNames.Designer.cs</LastGenOutput>
      </EmbeddedResource>
      <EmbeddedResource Update="Resources\ErrorMessages.resx">
         <Generator>PublicResXFileCodeGenerator</Generator>
         <LastGenOutput>ErrorMessages.Designer.cs</LastGenOutput>
      </EmbeddedResource>
   </ItemGroup>

   <ItemGroup>
      <None Update="example.pfx">
         <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </None>
   </ItemGroup>

   <ItemGroup>
     <WCFMetadata Include="Connected Services" />
   </ItemGroup>

   <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
      <!-- Ensure Node.js is installed -->
      <Exec Command="node --version" ContinueOnError="true">
         <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
      </Exec>
      <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
      <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
      <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
   </Target>

   <Target Name="UpdatePackageJson" AfterTargets="GetVersion">
      <Exec WorkingDirectory="$(SpaRoot)" Command="npm version $(GitVersion_FullSemVer) --allow-same-version" />
   </Target>

   <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
      <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
      <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
      <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
      <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

      <!-- Include the newly-built files in the publish output -->
      <ItemGroup>
         <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
         <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
         <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
            <RelativePath>%(DistFiles.Identity)</RelativePath>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
         </ResolvedFileToPublish>
      </ItemGroup>
   </Target>
</Project>
